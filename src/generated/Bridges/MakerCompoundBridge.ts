// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LogMakerToCompound extends EthereumEvent {
  get params(): LogMakerToCompound__Params {
    return new LogMakerToCompound__Params(this);
  }
}

export class LogMakerToCompound__Params {
  _event: LogMakerToCompound;

  constructor(event: LogMakerToCompound) {
    this._event = event;
  }

  get cdpNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ethAmt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get daiAmt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fees(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class LogCompoundToMaker extends EthereumEvent {
  get params(): LogCompoundToMaker__Params {
    return new LogCompoundToMaker__Params(this);
  }
}

export class LogCompoundToMaker__Params {
  _event: LogCompoundToMaker;

  constructor(event: LogCompoundToMaker) {
    this._event = event;
  }

  get cdpNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ethAmt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get daiAmt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fees(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class LogOpen extends EthereumEvent {
  get params(): LogOpen__Params {
    return new LogOpen__Params(this);
  }
}

export class LogOpen__Params {
  _event: LogOpen;

  constructor(event: LogOpen) {
    this._event = event;
  }

  get cdpNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogWipe extends EthereumEvent {
  get params(): LogWipe__Params {
    return new LogWipe__Params(this);
  }
}

export class LogWipe__Params {
  _event: LogWipe;

  constructor(event: LogWipe) {
    this._event = event;
  }

  get cdpNum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get daiAmt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mkrFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get daiFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class MakerCompoundBridge extends SmartContract {
  static bind(address: Address): MakerCompoundBridge {
    return new MakerCompoundBridge("MakerCompoundBridge", address);
  }

  ude(): Address {
    let result = super.call("ude", []);

    return result[0].toAddress();
  }

  try_ude(): CallResult<Address> {
    let result = super.tryCall("ude", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  feeOne(): Address {
    let result = super.call("feeOne", []);

    return result[0].toAddress();
  }

  try_feeOne(): CallResult<Address> {
    let result = super.tryCall("feeOne", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  ume(): Address {
    let result = super.call("ume", []);

    return result[0].toAddress();
  }

  try_ume(): CallResult<Address> {
    let result = super.tryCall("ume", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  daiAddr(): Address {
    let result = super.call("daiAddr", []);

    return result[0].toAddress();
  }

  try_daiAddr(): CallResult<Address> {
    let result = super.tryCall("daiAddr", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  registry(): Address {
    let result = super.call("registry", []);

    return result[0].toAddress();
  }

  try_registry(): CallResult<Address> {
    let result = super.tryCall("registry", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  totalDeposits(): BigInt {
    let result = super.call("totalDeposits", []);

    return result[0].toBigInt();
  }

  try_totalDeposits(): CallResult<BigInt> {
    let result = super.tryCall("totalDeposits", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  sai(): Address {
    let result = super.call("sai", []);

    return result[0].toAddress();
  }

  try_sai(): CallResult<Address> {
    let result = super.tryCall("sai", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  fees(): BigInt {
    let result = super.call("fees", []);

    return result[0].toBigInt();
  }

  try_fees(): CallResult<BigInt> {
    let result = super.tryCall("fees", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  cDai(): Address {
    let result = super.call("cDai", []);

    return result[0].toAddress();
  }

  try_cDai(): CallResult<Address> {
    let result = super.tryCall("cDai", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  cEth(): Address {
    let result = super.call("cEth", []);

    return result[0].toAddress();
  }

  try_cEth(): CallResult<Address> {
    let result = super.tryCall("cEth", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  ethAddr(): Address {
    let result = super.call("ethAddr", []);

    return result[0].toAddress();
  }

  try_ethAddr(): CallResult<Address> {
    let result = super.tryCall("ethAddr", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  feeTwo(): Address {
    let result = super.call("feeTwo", []);

    return result[0].toAddress();
  }

  try_feeTwo(): CallResult<Address> {
    let result = super.tryCall("feeTwo", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  deposits(param0: Address): BigInt {
    let result = super.call("deposits", [EthereumValue.fromAddress(param0)]);

    return result[0].toBigInt();
  }

  try_deposits(param0: Address): CallResult<BigInt> {
    let result = super.tryCall("deposits", [EthereumValue.fromAddress(param0)]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}

export class WithdrawCDAICall extends EthereumCall {
  get inputs(): WithdrawCDAICall__Inputs {
    return new WithdrawCDAICall__Inputs(this);
  }

  get outputs(): WithdrawCDAICall__Outputs {
    return new WithdrawCDAICall__Outputs(this);
  }
}

export class WithdrawCDAICall__Inputs {
  _call: WithdrawCDAICall;

  constructor(call: WithdrawCDAICall) {
    this._call = call;
  }

  get amt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCDAICall__Outputs {
  _call: WithdrawCDAICall;

  constructor(call: WithdrawCDAICall) {
    this._call = call;
  }
}

export class CollectCDAICall extends EthereumCall {
  get inputs(): CollectCDAICall__Inputs {
    return new CollectCDAICall__Inputs(this);
  }

  get outputs(): CollectCDAICall__Outputs {
    return new CollectCDAICall__Outputs(this);
  }
}

export class CollectCDAICall__Inputs {
  _call: CollectCDAICall;

  constructor(call: CollectCDAICall) {
    this._call = call;
  }

  get num(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CollectCDAICall__Outputs {
  _call: CollectCDAICall;

  constructor(call: CollectCDAICall) {
    this._call = call;
  }
}

export class DepositDAICall extends EthereumCall {
  get inputs(): DepositDAICall__Inputs {
    return new DepositDAICall__Inputs(this);
  }

  get outputs(): DepositDAICall__Outputs {
    return new DepositDAICall__Outputs(this);
  }
}

export class DepositDAICall__Inputs {
  _call: DepositDAICall;

  constructor(call: DepositDAICall) {
    this._call = call;
  }

  get amt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositDAICall__Outputs {
  _call: DepositDAICall;

  constructor(call: DepositDAICall) {
    this._call = call;
  }
}

export class SetFeesCall extends EthereumCall {
  get inputs(): SetFeesCall__Inputs {
    return new SetFeesCall__Inputs(this);
  }

  get outputs(): SetFeesCall__Outputs {
    return new SetFeesCall__Outputs(this);
  }
}

export class SetFeesCall__Inputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }

  get amt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeesCall__Outputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }
}

export class CollectTokensCall extends EthereumCall {
  get inputs(): CollectTokensCall__Inputs {
    return new CollectTokensCall__Inputs(this);
  }

  get outputs(): CollectTokensCall__Outputs {
    return new CollectTokensCall__Outputs(this);
  }
}

export class CollectTokensCall__Inputs {
  _call: CollectTokensCall;

  constructor(call: CollectTokensCall) {
    this._call = call;
  }

  get num(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CollectTokensCall__Outputs {
  _call: CollectTokensCall;

  constructor(call: CollectTokensCall) {
    this._call = call;
  }
}

export class MakerToCompoundCall extends EthereumCall {
  get inputs(): MakerToCompoundCall__Inputs {
    return new MakerToCompoundCall__Inputs(this);
  }

  get outputs(): MakerToCompoundCall__Outputs {
    return new MakerToCompoundCall__Outputs(this);
  }
}

export class MakerToCompoundCall__Inputs {
  _call: MakerToCompoundCall;

  constructor(call: MakerToCompoundCall) {
    this._call = call;
  }

  get cdpId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ethCol(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get daiDebt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MakerToCompoundCall__Outputs {
  _call: MakerToCompoundCall;

  constructor(call: MakerToCompoundCall) {
    this._call = call;
  }

  get daiAmt(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositCDAICall extends EthereumCall {
  get inputs(): DepositCDAICall__Inputs {
    return new DepositCDAICall__Inputs(this);
  }

  get outputs(): DepositCDAICall__Outputs {
    return new DepositCDAICall__Outputs(this);
  }
}

export class DepositCDAICall__Inputs {
  _call: DepositCDAICall;

  constructor(call: DepositCDAICall) {
    this._call = call;
  }

  get amt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCDAICall__Outputs {
  _call: DepositCDAICall;

  constructor(call: DepositCDAICall) {
    this._call = call;
  }
}

export class WithdrawDAICall extends EthereumCall {
  get inputs(): WithdrawDAICall__Inputs {
    return new WithdrawDAICall__Inputs(this);
  }

  get outputs(): WithdrawDAICall__Outputs {
    return new WithdrawDAICall__Outputs(this);
  }
}

export class WithdrawDAICall__Inputs {
  _call: WithdrawDAICall;

  constructor(call: WithdrawDAICall) {
    this._call = call;
  }

  get amt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawDAICall__Outputs {
  _call: WithdrawDAICall;

  constructor(call: WithdrawDAICall) {
    this._call = call;
  }
}

export class CompoundToMakerCall extends EthereumCall {
  get inputs(): CompoundToMakerCall__Inputs {
    return new CompoundToMakerCall__Inputs(this);
  }

  get outputs(): CompoundToMakerCall__Outputs {
    return new CompoundToMakerCall__Outputs(this);
  }
}

export class CompoundToMakerCall__Inputs {
  _call: CompoundToMakerCall;

  constructor(call: CompoundToMakerCall) {
    this._call = call;
  }

  get cdpId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ethCol(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get daiDebt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CompoundToMakerCall__Outputs {
  _call: CompoundToMakerCall;

  constructor(call: CompoundToMakerCall) {
    this._call = call;
  }
}

export class TransferUnmappedCDPCall extends EthereumCall {
  get inputs(): TransferUnmappedCDPCall__Inputs {
    return new TransferUnmappedCDPCall__Inputs(this);
  }

  get outputs(): TransferUnmappedCDPCall__Outputs {
    return new TransferUnmappedCDPCall__Outputs(this);
  }
}

export class TransferUnmappedCDPCall__Inputs {
  _call: TransferUnmappedCDPCall;

  constructor(call: TransferUnmappedCDPCall) {
    this._call = call;
  }

  get cdpNum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get num(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferUnmappedCDPCall__Outputs {
  _call: TransferUnmappedCDPCall;

  constructor(call: TransferUnmappedCDPCall) {
    this._call = call;
  }
}

export class RefillFundsCall extends EthereumCall {
  get inputs(): RefillFundsCall__Inputs {
    return new RefillFundsCall__Inputs(this);
  }

  get outputs(): RefillFundsCall__Outputs {
    return new RefillFundsCall__Outputs(this);
  }
}

export class RefillFundsCall__Inputs {
  _call: RefillFundsCall;

  constructor(call: RefillFundsCall) {
    this._call = call;
  }

  get daiDebt(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefillFundsCall__Outputs {
  _call: RefillFundsCall;

  constructor(call: RefillFundsCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
